#import "/src/components/TypstTemplate/lib.typ": *

#show: project.with(
  title: none,
  lang: "zh",
)

= 学习感悟
以前总是想着自己一个笔记做得尽善尽美，但现在发现这非常困难，尤其是在涉略非课程相关的知识时，不仅内容难写，也很难找到一个合适的体系去串联它们。因此我现在的做法更趋向于记录自己学习的路径，贴出参考链接，偶尔将它们转述成自己的语言，偶尔加入自己的理解，不追求面面俱到。

之前不知道在哪里看过一个观点，说是文字版教程比视频版好得多，可以随时跳转、快速筛选到你需要的、不李姐的内容。但现在我发现，视频所能涵盖的信息量不是文字能比的，往往文字教程走马观花的叙述，不如视频中代码、效果、动画等结合起来有效（至少不容易看完就忘）。因此现在我觉得，二者都有可取之处，当我初入某一领域时，基本所有内容都是我不懂的，就很适合看视频来学习；当我有一定了解后，文字版教程则更适合查阅和深入学习。

VSCode 大于一切、开源软件最牛逼的想法得改改了。一个东西再好再自由，那也得你有时间去探索，比如用 VSCode 配置 OpenGL 的环境，这个还马马虎虎能做，但显然不如直接用成熟的 IDE 来得方便（功能也更成体系），用 Rider 来拆箱即用开发 Unity 相关东西也比 VSCode 配置半天方便得多。再比如，ReadPaper 这个软件虽然是国产闭源的，还要收费，品味上比 Zotero 低了太多，但它主打一个拆箱即用，省去了不少配置的时间成本，认识的一个同学和一个博士学长也都在用。
